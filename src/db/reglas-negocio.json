{
   "Procesos Negocio": [
      {
         "procesoNegocio": "Control Migratorio",
         "descripcionProceso": "Registros de control migratorio.",
         "totalRegCorrectos": 217734027,
         "totalRegIncorrectos": 55552809,
         "totalRegistros": 273286836,
         "path": "\/control-migratorio"
      },
      {
         "procesoNegocio": "Trámites de Inmigración",
         "descripcionProceso": "Registros de trámites de inmigración.",
         "totalRegCorrectos": 4840810,
         "totalRegIncorrectos": 1115474,
         "totalRegistros": 5956284,
         "path": "\/tramite-inmigracion"
      },
      {
         "procesoNegocio": "Alertas",
         "descripcionProceso": "Registro de personas no autorizadas.",
         "totalRegCorrectos": 64933,
         "totalRegIncorrectos": 29000,
         "totalRegistros": 93933,
         "path": "\/alertas"
      }
   ],
   "Control Migratorio": [
      {
         "idRegla": "RC0001",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdMovMigratorio] ",
         "definicionRegla": "Todos los registros del elemento de datos [sIdMovMigratorio] de la tabla [SimMovMigra] son únicos.",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdMovMigratorio], count (*) as '# Registros Duplicados'\nfrom [SimMovMigra]\ngroup by [sIdMovMigratorio]\nhaving count (*)>1",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0002",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdMovMigratorio] [char] (14) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdMovMigratorio] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdMovMigratorio], count (*) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [sIdMovMigratorio] is null or [sIdMovMigratorio]=''\ngroup by [sIdMovMigratorio]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0003",
         "tabla": "[SimMovMigra]",
         "campos": "[dFechaControl]",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaControl] de la tabla [SimMovMigra] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaControl], count (*) as '# Registros Fecha no Válida'\nfrom [SimMovMigra]\nwhere isdate([dFechaControl]) =0 AND [dFechaControl] IS NOT NULL\ngroup by [dFechaControl]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0004",
         "tabla": "[SimMovMigra]",
         "campos": "[dFechaControl] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaControl] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío (‘1900-01-01 00:00:00.000’)",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaControl], count (*) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [dFechaControl] is null or dFechaControl = '1900-01-01 00:00:00.000' \ngroup by [dFechaControl]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0005",
         "tabla": "[SimMovMigra]",
         "campos": "[dFechaDigita] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaControl] de la tabla [SimMovMigra] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaDigita], count (*) as '# Registros Fecha no Válida'\nfrom [SimMovMigra]\nwhere isdate([dFechaDigita]) =0 AND [dFechaDigita] IS NOT NULL\ngroup by [dFechaDigita]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0007",
         "tabla": "[SimMovMigra]",
         "campos": "[nPermanencia] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nPermanencia] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nPermanencia], count (*) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [nPermanencia] is null\ngroup by [nPermanencia]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0009",
         "tabla": "[SimMovMigra]",
         "campos": "[sTipo] [char] (1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sTipo] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 3,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sTipo], count (*) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [sTipo] is null or [sTipo] =''\ngroup by [sTipo]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0010",
         "tabla": "[SimMovMigra]",
         "campos": "[sTipo] [char] (1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sTipo] de la tabla [SimMovMigra] presentan los siguientes valores válidos: 'E' y 'S'.",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 12,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sTipo], count (*) as '# Registros No Válidos' \nfrom (select * from [SimMovMigra] where not([sTipo] is null or [sTipo] ='')) v \nwhere [sTipo] NOT IN ('E' , 'S')    \ngroup by [sTipo] ",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0011",
         "tabla": "[SimMovMigra]",
         "campos": "[sTipoUnidad] [char](1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sTipoUnidad] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sTipoUnidad], count( *) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [sTipoUnidad] is null or [sTipoUnidad] =''\ngroup by [sTipoUnidad]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0012",
         "tabla": "[SimMovMigra]",
         "campos": "[sTipoUnidad] [char](1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sTipoUnidad] de la tabla [SimMovMigra] presentan los siguientes valores válidos: 'N' y 'M'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sTipoUnidad], count( *) as '# Registros No Válidos'\nfrom (select * from [SimMovMigra] \nwhere not([sTipoUnidad] is null or [sTipoUnidad] ='')) v\nwhere [sTipoUnidad] NOT IN ('N','M')\ngroup by [sTipoUnidad]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0013",
         "tabla": "[SimMovMigra]",
         "campos": "[bAnulado] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bAnulado] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bAnulado], count( *) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [bAnulado] is null \ngroup by [bAnulado]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0014",
         "tabla": "[SimMovMigra]",
         "campos": "[bAnulado] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bAnulado] de la tabla [SimMovMigra] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bAnulado], count( *) as '# Registros No Válidos'\nfrom (select * from [SimMovMigra] where [bAnulado] is not null) v\nwhere [bAnulado] NOT IN ('0','1') \ngroup by [bAnulado]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0015",
         "tabla": "[SimMovMigra]",
         "campos": "[sPagoPermOk] [char](1) NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sPagoPermOk] de la tabla [SimMovMigra] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sPagoPermOk], count( *) as '# Registros No Válidos'\nfrom (select * from [SimMovMigra] where [sPagoPermOk]  is not null) v\nwhere [sPagoPermOk] NOT IN ('0','1')\ngroup by [sPagoPermOk]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0016",
         "tabla": "[SimMovMigra]",
         "campos": "[bTemporal] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bTemporal] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bTemporal], count( *) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [bTemporal] is null \ngroup by [bTemporal]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0017",
         "tabla": "[SimMovMigra]",
         "campos": "[bTemporal] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bTemporal] de la tabla [SimMovMigra] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bTemporal], count( *) as '# Registros No Válidos'\nfrom (select * from [SimMovMigra] where [bTemporal] is not null) v\nwhere [bTemporal] NOT IN ('0','1')\ngroup by [bTemporal]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0018",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdMotivoViaje] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdMotivoViaje] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdMotivoViaje] de la tabla [SimMotivoViaje]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "   SELECT count( *) as '# Registros nIdMotivoViaje sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdMotivoViaje is not null) child\n   LEFT JOIN SimMotivoViaje parent ON parent. nIdMotivoViaje = child. nIdMotivoViaje\n   WHERE parent. nIdMotivoViaje IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0020",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdMotivoViaje] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdMotivoViaje] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdMotivoViaje], count( *) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [nIdMotivoViaje] is null \ngroup by [nIdMotivoViaje]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0021",
         "tabla": "[SimMovMigra]",
         "campos": "[bTiempoReal] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bTiempoReal] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío",
         "dimensionRegla": "Obligatoriedad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bTiempoReal], count( *) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [bTiempoReal] is null \ngroup by [bTiempoReal]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0022",
         "tabla": "[SimMovMigra]",
         "campos": "[bTiempoReal] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bTiempoReal] de la tabla [SimMovMigra] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bTiempoReal], count( *) as '# Registros No Válidos'\nfrom (select * from [SimMovMigra] where [bTiempoReal] is not null) v\nwhere [bTiempoReal] NOT IN ('0','1')\ngroup by [bTiempoReal]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0023",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdItinerario] [char](12) NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdItinerario] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdItinerario] de la tabla [SimItinerario]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "   SELECT count( *) as '# Registros sIdItinerario sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdItinerario is not null) child\n   LEFT JOIN SimItinerario parent ON parent. sIdItinerario = child. sIdItinerario\n   WHERE parent.sIdItinerario  IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0025",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdCalidad] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdCalidad] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdCalidad] de la tabla [SimCalidadMigratoria]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdCalidad sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdCalidad is not null) child\n   LEFT JOIN SimCalidadMigratoria parent ON parent. nIdCalidad = child. nIdCalidad\n   WHERE parent. nIdCalidad IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0027",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdCalidad] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdCalidad] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdCalidad], count( *) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [nIdCalidad] is null \ngroup by [nIdCalidad]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0028",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdTipoAlojamiento] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdTipoAlojamiento] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdTipoAlojamiento] de la tabla [SimAlojamiento]\n",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdTipoAlojamiento sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdTipoAlojamiento is not null) child\n   LEFT JOIN SimAlojamiento parent ON parent. nIdTipoAlojamiento = child. nIdTipoAlojamiento\n   WHERE parent. nIdTipoAlojamiento IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0030",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdTipoAlojamiento] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdTipoAlojamiento] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdTipoAlojamiento], count( *) as '# Registros Nulos o Vacíos'\nfrom [SimMovMigra]\nwhere [nIdTipoAlojamiento] is null \ngroup by [nIdTipoAlojamiento]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0031",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdPaisNacionalidad] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdPaisNacionalidad] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdPais] en la tabla [SimPais]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdPaisNacionalidad sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdPaisNacionalidad is not null) child\n   LEFT JOIN SimPais parent ON parent.sIdPais = child. sIdPaisNacionalidad\n   WHERE parent. sIdPais IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0032",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdPaisNacionalidad] [char](3) NOT NULL,",
         "definicionRegla": "Los valores del elemento de datos [sIdPaisNacionalidad] y [uIdPersona] de un registro de la tabla [SimMovMigra] también están presentes en los elementos de datos [sIdPaisNacionalidad] y  [uIdPersona] de la tabla [SimPersona]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdPaisNacimiento Inconsistente'\n   FROM (select * from SimMovMigra where not(sIdPaisNacionalidad is null or sIdPaisNacionalidad='NNN') ) child\n   LEFT JOIN SimPais parent ON parent. sIdPais = child. sIdPaisNacionalidad\n   WHERE parent. sIdPais IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0034",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdPaisNacionalidad] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdPaisNacionalidad] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdPaisNacionalidad], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdPaisNacionalidad] is null or [sIdPaisNacionalidad] =''\ngroup by [sIdPaisNacionalidad]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0035",
         "tabla": "[SimMovMigra]",
         "campos": "[nGastos] [numeric](15, 2) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nGastos] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nGastos], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [nGastos] is null \ngroup by [nGastos]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0037",
         "tabla": "[SimMovMigra]",
         "campos": "[uIdPersona] [uniqueidentifier] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [uIdPersona] de la tabla [SimMovMigra] también están presentes en el elemento de datos [uIdPersona] de la tabla [SimPersona]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros uIdPersona sin Tabla Maestra'\n   FROM (select * from SimMovMigra where uIdPersona is not null) child\n   LEFT JOIN SimPersona parent ON parent. uIdPersona = child. uIdPersona\n   WHERE parent. uIdPersona IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0039",
         "tabla": "[SimMovMigra]",
         "campos": "[uIdPersona] [uniqueidentifier] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [uIdPersona] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío. ('00000000-0000-0000-0000-000000000000')",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [uIdPersona], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [uIdPersona] is null or [uIdPersona] = '00000000-0000-0000-0000-000000000000' or ltrim(convert(nvarchar(50), [uIdPersona])) = '' \ngroup by [uIdPersona]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0040",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDocumento] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdDocumento] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdDocumento] de la tabla [SimDocumento]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdDocumento sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdDocumento is not null) child\n   LEFT JOIN SimDocumento parent ON parent. sIdDocumento = child. sIdDocumento \n   WHERE parent. sIdDocumento IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0042",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDocumento] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdDocumento] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdDocumento], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdDocumento] is null or ltrim([sIdDocumento]) = '' \ngroup by [sIdDocumento]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0044",
         "tabla": "[SimMovMigra]",
         "campos": "[sNumeroDoc] [varchar](25) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sNumeroDoc] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 3187,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sNumeroDoc], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sNumeroDoc] is null or [sNumeroDoc] = '' \ngroup by [sNumeroDoc]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0047",
         "tabla": "[SimMovMigra]",
         "campos": "[sNumeroDoc] [varchar](25) NOT NULL,",
         "definicionRegla": "Los valores del elemento de datos [sIdDocumento], [sNumeroDoc] y [uIdPersona] de un registro de la tabla [SimMovMigra] también están presentes en los elementos de datos [sIdDocumento], [sNumero] y [uIdPersona] de la tabla [SimDocPersona]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 38233868,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Número de Documentos Inconsistentes'\n   FROM (select * from SimMovMigra where sNumeroDoc is not null) child\n   LEFT JOIN SimDocPersona parent ON parent. sIdDocumento = child.sIdDocumento and\nparent.sNumero = child.sNumeroDoc and parent. uIdPersona = child. uIdPersona\n   WHERE parent. sNumero IS NULL and bAnulado=0",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0048",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDependencia] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdDependencia] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdDependencia] de la tabla [SimDependencia]\n",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdDependencia sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdDependencia is not null) child\n   LEFT JOIN SimDependencia parent ON parent. sIdDependencia = child. sIdDependencia\n   WHERE parent. sIdDependencia IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0050",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDependencia] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdDependencia] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdDependencia], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdDependencia] is null or LTRIM([sIdDependencia]) = '' \ngroup by [sIdDependencia]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0051",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDepDigita] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos de [sIdDepDigita] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdDependencia] de la tabla [SimDependencia]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdDepDigita sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdDepDigita is not null) child\n   LEFT JOIN SimDependencia parent ON parent.sIdDependencia  = child. sIdDependencia\n   WHERE parent. sIdDependencia IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0053",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDepDigita] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdDepDigita] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdDepDigita], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdDepDigita] is null or LTRIM([sIdDepDigita]) = '' \ngroup by [sIdDepDigita]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0054",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdSesion] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos de [nIdSesion] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdSesion] de la tabla [SimSesion]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdSesion sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdSesion is not null) child\n   LEFT JOIN SimSesion parent ON parent. nIdSesion = child. nIdSesion\n   WHERE parent. nIdSesion IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0056",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdSesion] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdSesion] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdSesion], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [nIdSesion] is null or [nIdSesion] = 0\ngroup by [nIdSesion]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0057",
         "tabla": "[SimMovMigra]",
         "campos": "[dFechaHoraAud] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaHoraAud] de la tabla [SimMovMigra] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaHoraAud], count(*) as '# Registros Fecha no Válida'\nfrom [SimMovMigra]\nwhere isdate( [dFechaHoraAud]) =0 AND [dFechaHoraAud] IS NOT NULL\ngroup by [dFechaHoraAud]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0058",
         "tabla": "[SimMovMigra]",
         "campos": "[dFechaHoraAud] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaHoraAud] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 4248482,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaHoraAud], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [dFechaHoraAud] is null or [dFechaHoraAud] = '1900-01-01 00:00:00.000' \ngroup by [dFechaHoraAud]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0059",
         "tabla": "[SimMovMigra]\n",
         "campos": "[dConsRq] [datetime] NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dConsRq] de la tabla [SimMovMigra] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dConsRq], count(*) as '# Registros Fecha no Válida'\nfrom [SimMovMigra]\nwhere isdate( [dConsRq]) =0 AND [dConsRq] IS NOT NULL\ngroup by [dConsRq]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0060",
         "tabla": "[SimMovMigra]",
         "campos": "[dRptaRq] [datetime] NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dRptaRq] de la tabla [SimMovMigra] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dRptaRq], count(*) as '# Registros Fecha no Válida'\nfrom [SimMovMigra]\nwhere isdate( [dRptaRq]) =0 AND [dRptaRq] IS NOT NULL\ngroup by [dRptaRq]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0061",
         "tabla": "[SimMovMigra]",
         "campos": "[sEstadoRq] [char](1) NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sEstadoRq] de la tabla [SimMovMigra] presentan los siguientes valores válidos: 'X','N', 'S'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 919,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sEstadoRq], count( *) as '# Registros No Válidos'\nfrom (select * from [SimMovMigra] where not ([sEstadoRq] is null or rtrim([sEstadoRq])='') )v\nwhere [sEstadoRq] NOT IN ('X','N','S')\ngroup by [sEstadoRq]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0062",
         "tabla": "[SimMovMigra]",
         "campos": "[sContadorRq] [varchar](20) NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sContadorRq] de la tabla [SimMovMigra] tienen el formato numérico.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros CONTADOR RQ– Formato no válida'\nfrom [SimMovMigra]\nwhere ISNUMERIC(LTRIM(sContadorRq)) = 0\nand sContadorRq is not null and sContadorRq <>''",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0063",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdParteDiario] [char](12) NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdParteDiario] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdParteDiario] de la tabla [SimParteDiario]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdParteDiario sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdParteDiario is not null) child\n   LEFT JOIN SimParteDiario parent ON parent. sIdParteDiario = child. sIdParteDiario\n   WHERE parent. sIdParteDiario IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0065",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdOperadorDigita] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdOperadorDigita] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdOperador] de la tabla [SimOperador]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdOperadorDigita sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdOperadorDigita is not null) child\n   LEFT JOIN SimOperador parent ON parent.nIdOperador  = child. nIdOperadorDigita \n   WHERE parent. nIdOperador IS NULL",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0067",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdOperadorDigita] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdOperadorDigita] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdOperadorDigita], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [nIdOperadorDigita] is null or [nIdOperadorDigita] = 0\ngroup by [nIdOperadorDigita]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0068",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdModuloDigita] [char](7) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdModuloDigita] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdModuloDigita] de la tabla [SimModulo]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdModuloDigita sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdModuloDigita is not null) child\n   LEFT JOIN SimModulo parent ON parent.sIdModulo  = child. sIdModuloDigita\n   WHERE parent. sIdModulo IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0070",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdModuloDigita] [char](7) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdModuloDigita] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdModuloDigita], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdModuloDigita] is null or LTRIM([sIdModuloDigita]) = '' \ngroup by [sIdModuloDigita]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0071",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdEstacionDigita] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdEstacionDigita] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdEstacion] de la tabla [SimEstacion]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdEstacionDigita sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdEstacionDigita is not null) child\n   LEFT JOIN SimEstacion parent ON parent.nIdEstacion = child. nIdEstacionDigita\n   WHERE parent. nIdEstacion IS NULL",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0073",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdEstacionDigita] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdEstacionDigita] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdEstacionDigita], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [nIdEstacionDigita] is null or [nIdEstacionDigita] = 0\ngroup by [nIdEstacionDigita]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0074",
         "tabla": "[SimMovMigra]\n",
         "campos": "[sIdPaisMov] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdPaisMov] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdPais] de la tabla [SimPais]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdPaisMov sin Tabla Maestra'\n   FROM (select * from SimMovMigra where NOT(sIdPaisMov is null or sIdPaisMov='NNN') ) child\n   LEFT JOIN SimPais parent ON parent. sIdPais = child. sIdPaisMov\n   WHERE parent. sIdPais IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0076",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdPaisMov] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdPaisMov] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdPaisMov], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdPaisMov] is null or LTRIM([sIdPaisMov]) = '' \ngroup by [sIdPaisMov]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0077",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdViaTransporte] [char](1) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdViaTransporte] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdViaTransporte] de la tabla [SimViaTransporte]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdViaTransporte sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdViaTransporte is not null) child\n   LEFT JOIN SimViaTransporte parent ON parent. sIdViaTransporte = child. sIdViaTransporte\n   WHERE parent. sIdViaTransporte IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0079",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdViaTransporte] [char](1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdViaTransporte] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdViaTransporte], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdViaTransporte] is null or LTRIM([sIdViaTransporte]) = '' \ngroup by [sIdViaTransporte]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0080",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDocControl] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdDocControl] de la tabla [SimMovMigra] también están presentes en el elemento de datos [sIdDocumento] de la tabla [SimDocumento]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdDocControl sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdDocControl is not null) child\n   LEFT JOIN SimDocumento parent ON parent.sIdDocumento = child. sIdDocControl\n   WHERE parent. sIdDocumento IS NULL",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0082",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDocControl] [char](3) NOT NULL,\n",
         "definicionRegla": "Todos los registros del elemento de datos [sIdDocControl] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdDocControl], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sIdDocControl] is null or LTRIM([sIdDocControl]) = '' \ngroup by [sIdDocControl]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0083",
         "tabla": "[SimMovMigra]",
         "campos": "[sNumDocControl] [varchar](25) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sNumDocControl] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 4660219,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sNumDocControl], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [sNumDocControl] is null or [sNumDocControl] = '' \ngroup by [sNumDocControl]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0084",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdTransportista] [int] NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdTransportista] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdTransportista] de la tabla [SimEmpTransporte]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdTransportista sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdTransportista is not null) child\n   LEFT JOIN SimEmpTransporte parent ON parent. nIdTransportista = child. nIdTransportista\n   WHERE parent. nIdTransportista IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0086",
         "tabla": "[SimMovMigra]",
         "campos": "[bExpulsion] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bExpulsion] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bExpulsion], count( *) as '# Registros Nulos o Vacios'\nfrom [SimMovMigra]\nwhere [bExpulsion] is null \ngroup by [bExpulsion]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0087",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdTurnoOperador] [int] NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdTurnoOperador] de la tabla [SimMovMigra] también están presentes en el elemento de datos [nIdTurnoOperador] de la tabla [SimTurnoOperador]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdTurnoOperador sin Tabla Maestra'\n   FROM (select * from SimMovMigra where nIdTurnoOperador is not null) child\n   LEFT JOIN SimTurnoOperador parent ON parent. nIdTurnoOperador = child. nIdTurnoOperador\n   WHERE parent. nIdTurnoOperador IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0089",
         "tabla": "[SimItinerario]",
         "campos": "[sIdItinerario] [char](12) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdItinerario] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdItinerario], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [sIdItinerario] is null or LTRIM([sIdItinerario]) = '' \ngroup by [sIdItinerario]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0090",
         "tabla": "[SimItinerario]",
         "campos": "[sIdItinerario] ",
         "definicionRegla": "Todos los registros del elemento de datos [sIdItinerario] de la tabla [SimItinerario] son únicos.",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdItinerario], count( *)  as '# Registros Duplicados'\nfrom [SimItinerario]\ngroup by [sIdItinerario]\nhaving count(*)>1",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0091",
         "tabla": "[SimItinerario]",
         "campos": "[sTipoMovimiento] [char](1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sTipoMovimiento] de la tabla [SimItinerario] presentan los siguientes valores válidos: 'S' y 'E'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sTipoMovimiento], count( *) as '# Registros No Válidos'\nfrom (select * from [SimItinerario] where not ([sTipoMovimiento] is null or ltrim([sTipoMovimiento])=''))v \nwhere [sTipoMovimiento] NOT IN ('S','E')\ngroup by [sTipoMovimiento]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0092",
         "tabla": "[SimItinerario]",
         "campos": "[dFechaProgramada] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaProgramada] de la tabla [SimItinerario] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaProgramada], count(*) as '# Registros Fecha no Válida'\nfrom [SimItinerario]\nwhere isdate( [dFechaProgramada]) =0 AND [dFechaProgramada] IS NOT NULL\ngroup by [dFechaProgramada]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0093",
         "tabla": "[SimItinerario]",
         "campos": "[sNumeroNave] [varchar](20) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sNumeroNave] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sNumeroNave], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [sNumeroNave] is null or [sNumeroNave] = '' \ngroup by [sNumeroNave]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0094",
         "tabla": "[SimItinerario]",
         "campos": "[sEstado] [char](1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sEstado] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sEstado], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [sEstado] is null or LTRIM([sEstado]) = '' \ngroup by [sEstado]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0095",
         "tabla": "[SimItinerario]",
         "campos": "[sEstado] [char](1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sEstado] de la tabla [SimItinerario] presentan los siguientes valores válidos: 'A','C','N'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sEstado], count( *) as '# Registros No Válidos'\nfrom (select * from [SimItinerario] where not (sEstado is null or ltrim(sEstado)=''))v\nwhere [sEstado] NOT IN ('A','C','N')\ngroup by [sEstado]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0096",
         "tabla": "[SimItinerario]",
         "campos": "[nIdTransportista] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdTransportista] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdTransportista], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [nIdTransportista] is null or [nIdTransportista] = 0\ngroup by [nIdTransportista]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0097",
         "tabla": "[SimItinerario]",
         "campos": "[nIdTransportista] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdTransportista] de la tabla [SimItinerario] también están presentes en el elemento de datos [nIdTransportista] de la tabla [SimEmpTransporte]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdTransportista sin Tabla Maestra'\n   FROM (select * from SimItinerario where nIdTransportista is not null) child\n   LEFT JOIN SimEmpTransporte parent ON parent. nIdTransportista = child. nIdTransportista\n   WHERE parent. nIdTransportista IS NULL",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0099",
         "tabla": "[SimItinerario]",
         "campos": "[sIdPais] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdPais] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdPais], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [sIdPais] is null or LTRIM([sIdPais]) = '' \ngroup by [sIdPais]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0100",
         "tabla": "[SimItinerario]",
         "campos": "[sIdPais] [char](3) NOT NULL,",
         "definicionRegla": "Identificador de País\nTodos los valores del elemento de datos [sIdPais] de la tabla [SimItinerario] también están presentes en el elemento de datos [sIdPais] de la tabla [SimPais]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdPais sin Tabla Maestra'\n   FROM (select * from SimItinerario where sIdPais is not null) child\n   LEFT JOIN SimPais parent ON parent. sIdPais = child.sIdPais\n   WHERE parent. sIdPais IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0102",
         "tabla": "[SimItinerario]",
         "campos": "[sPaisEscala] [char](3) NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sPaisEscala] de la tabla [SimItinerario] también están presentes en el elemento de datos [sIdPais] de la tabla [SimPais]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros  sPaisEscala sin Tabla Maestra'\n   FROM (select * from SimItinerario where sPaisEscala is not null) child\n   LEFT JOIN SimPais parent ON parent.sIdPais = child. sPaisEscala\n   WHERE parent. sIdPais IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0104",
         "tabla": "[SimItinerario]",
         "campos": "[sIdParteDiario] [char](12) NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdParteDiario] de la tabla [SimItinerario] también están presentes en el elemento de datos [sIdParteDiario] de la tabla [SimParteDiario]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdParteDiario sin Tabla Maestra'\n   FROM (select * from SimItinerario where sIdParteDiario is not null) child\n   LEFT JOIN SimParteDiario parent ON parent. sIdParteDiario = child. sIdParteDiario\n   WHERE parent. sIdParteDiario IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0106\n",
         "tabla": "[SimItinerario]",
         "campos": "[sIdCiudad] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdCiudad] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdCiudad], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [sIdCiudad] is null or LTRIM([sIdCiudad]) = '' \ngroup by [sIdCiudad]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0107",
         "tabla": "[SimItinerario]",
         "campos": "[sIdCiudad] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdCiudad] de la tabla [SimItinerario] también están presentes en el elemento de datos [sIdCiudad] de la tabla [SimCiudad]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdCiudad sin Tabla Maestra'\n   FROM (select * from SimItinerario where sIdCiudad is not null) child\n   LEFT JOIN SimCiudad parent ON parent. sIdCiudad = child. sIdCiudad\n   WHERE parent. sIdCiudad IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0109",
         "tabla": "[SimItinerario]",
         "campos": "[sIdDependencia] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdDependencia] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdDependencia], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [sIdDependencia] is null or LTRIM([sIdDependencia]) = '' \ngroup by [sIdDependencia]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0110",
         "tabla": "[SimItinerario]\n",
         "campos": "[sIdDependencia] [char](3) NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [sIdDependencia] de la tabla [SimItinerario] también están presentes en el elemento de datos [sIdDependencia] de la tabla [SimDependencia]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdDependencia sin Tabla Maestra'\n   FROM (select * from SimItinerario where sIdDependencia is not null) child\n   LEFT JOIN SimDependencia parent ON parent. sIdDependencia = child. sIdDependencia\n   WHERE parent. sIdDependencia IS NULL",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0112",
         "tabla": "[SimItinerario]",
         "campos": "[dFechaCierre] [datetime] NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaCierre] de la tabla [SimItinerario] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaCierre], count(*) as '# Registros Fecha no Válida'\nfrom [SimItinerario]\nwhere isdate( [dFechaCierre]) =0 AND [dFechaCierre] IS NOT NULL\ngroup by [dFechaCierre]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0113",
         "tabla": "[SimItinerario]",
         "campos": "[nCantidadMov] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nCantidadMov] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nCantidadMov], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [nCantidadMov] is null \ngroup by [nCantidadMov]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0114",
         "tabla": "[SimItinerario]",
         "campos": "[nCantidadMov] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nCantidadMov] para cada elemento de datos [sIdItinerario] de la tabla [SimItinerario] tiene una relación nominal con el total de registros existentes del elemento de datos [sIdItinerario] en la tabla SimMovMigra. ",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 84995,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*)  as '# Registros nCantidadMov Inconsistentes'\nfrom SimItinerario s\nwhere nCantidadMov<> (select count(*) \nfrom SimMovMigra where sIdItinerario=s.sIdItinerario)",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0115",
         "tabla": "[SimItinerario]",
         "campos": "[nIdSesion] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdSesion] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdSesion], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [nIdSesion] is null or [nIdSesion] = 0\ngroup by [nIdSesion]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0116",
         "tabla": "[SimItinerario]",
         "campos": "[nIdSesion] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdSesion] de la tabla [SimItinerario] también están presentes en el elemento de datos [nIdSesion] de la tabla [SimSesion]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdSesion sin Tabla Maestra'\n   FROM (select * from SimItinerario where nIdSesion is not null) child\n   LEFT JOIN SimSesion parent ON parent. nIdSesion = child. nIdSesion\n   WHERE parent. nIdSesion IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0118",
         "tabla": "[SimItinerario]",
         "campos": "[dFechaHoraAud] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaHoraAud] de la tabla [SimItinerario] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaHoraAud], count( *) as '# Registros Nulos o Vacios'\nfrom [SimItinerario]\nwhere [dFechaHoraAud] is null or [dFechaHoraAud] = '1900-01-01 00:00:00.000' \ngroup by [dFechaHoraAud]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0119",
         "tabla": "[SimItinerario]",
         "campos": "[dFechaHoraAud] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaHoraAud] de la tabla [SimItinerario] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaHoraAud], count(*) as '# Registros Fecha no Válida'\nfrom [SimItinerario]\nwhere isdate( [dFechaHoraAud]) =0 AND [dFechaHoraAud] IS NOT NULL\ngroup by [dFechaHoraAud]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0120",
         "tabla": "[SimPais]",
         "campos": "[sIdPais] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdPais] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdPais], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [sIdPais] is null or LTRIM([sIdPais]) = '' \ngroup by [sIdPais]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0121",
         "tabla": "[SimPais]",
         "campos": "[sIdPais] ",
         "definicionRegla": "Todos los registros del elemento de datos [sIdPais] de la tabla [SimPais] son únicos.",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sIdPais], count( *) as '# Registros Duplicados'\nfrom [SimPais]\ngroup by [sIdPais]\nhaving count(*)>1",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0122",
         "tabla": "[SimPais]",
         "campos": "[sIdPais] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sIdPais] de la tabla [SimPais] presentan una longitud de 3 dígitos alfanumérico",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros SIDPAIS – Longitud no válida”\n   from [SimPais]\nwhere length(LTRIM(sIdPais)) <> 3",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0123",
         "tabla": "[SimPais]",
         "campos": "[sNombre] [varchar](50) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sNombre] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sNombre], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [sNombre] is null or [sNombre] = '' \ngroup by [sNombre]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0124",
         "tabla": "[SimPais]",
         "campos": "[sNacionalidad] [varchar](30) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sNacionalidad] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 6,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sNacionalidad], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [sNacionalidad] is null or [sNacionalidad] = '' \ngroup by [sNacionalidad]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0125",
         "tabla": "[SimPais]",
         "campos": "[bGrupoAndino] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bGrupoAndino] de la tabla [SimPais] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bGrupoAndino], count( *) as '# Registros No Válidos'\nfrom (select * from [SimPais] where [bGrupoAndino] is not null) v\nwhere [bGrupoAndino] NOT IN ('0','1')\ngroup by [bGrupoAndino]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0126",
         "tabla": "[SimPais]",
         "campos": "[bGrupoAndino] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bGrupoAndino] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bGrupoAndino], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [bGrupoAndino] is null \ngroup by [bGrupoAndino]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0127",
         "tabla": "[SimPais]",
         "campos": "[bActivo] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bActivo] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bActivo], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [bActivo] is null \ngroup by [bActivo]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0128",
         "tabla": "[SimPais]",
         "campos": "[bActivo] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bActivo] de la tabla [SimPais] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bActivo], count( *) as '# Registros No Válidos'\nfrom (select * from [SimPais] where [bActivo] is not null) v\nwhere [bActivo] NOT IN ('0','1')\ngroup by [bActivo]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0129",
         "tabla": "[SimPais]",
         "campos": "[nIdContinente] [int] NOT NULL,",
         "definicionRegla": "Todos los valores del elemento de datos [nIdContinente] de la tabla [SimPais] también están presentes en el elemento de datos [nIdContinente] de la tabla [SimContinente]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sin Tabla Maestra'\n   FROM (select * from SimPais where nIdContinente is not null) child\n   LEFT JOIN SimContinente parent ON parent. nIdContinente = child. nIdContinente\n   WHERE parent. nIdContinente IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0131",
         "tabla": "[SimPais]",
         "campos": "[nIdContinente] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdContinente] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdContinente], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [nIdContinente] is null or [nIdContinente] = 0\ngroup by [nIdContinente]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0132",
         "tabla": "[SimPais]",
         "campos": "[nIdSesion] [int] NOT NULL,",
         "definicionRegla": "\nTodos los valores del elemento de datos [nIdSesion] de la tabla [SimPais] también están presentes en el elemento de datos [nIdSesion] de la tabla [SimSesion]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros nIdSesion sin Tabla Maestra'\n   FROM (select * from SimItinerario where nIdSesion is not null) child\n   LEFT JOIN SimSesion parent ON parent. nIdSesion = child. nIdSesion\n   WHERE parent. nIdSesion IS NULL ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0134",
         "tabla": "[SimPais]",
         "campos": "[nIdSesion] [int] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [nIdSesion] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [nIdSesion], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [nIdSesion] is null or [nIdSesion] = 0\ngroup by [nIdSesion]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0135",
         "tabla": "[SimPais]",
         "campos": "[dFechaHoraAud] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaHoraAud] de la tabla [SimPais] presentan el formato de fecha válida.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaHoraAud], count(*) as '# Registros Fecha no Válida'\nfrom [SimPais]\nwhere isdate( [dFechaHoraAud]) =0 AND [dFechaHoraAud] IS NOT NULL\ngroup by [dFechaHoraAud]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0136",
         "tabla": "[SimPais]",
         "campos": "[dFechaHoraAud] [datetime] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaHoraAud] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [dFechaHoraAud], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [dFechaHoraAud] is null or [dFechaHoraAud] = '1900-01-01 00:00:00.000' \ngroup by [dFechaHoraAud]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0137",
         "tabla": "[SimPais]",
         "campos": "[bVisaIngreso] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bVisaIngreso] de la tabla [SimPais] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bVisaIngreso], count( *) as '# Registros No Válidos'\nfrom (select * from [SimPais] where [bVisaIngreso] is not null) v\nwhere [bVisaIngreso] NOT IN ('0','1')\ngroup by [bVisaIngreso]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0138",
         "tabla": "[SimPais]",
         "campos": "[bVisaIngreso] [bit] NOT NULL,\n",
         "definicionRegla": "Todos los registros del elemento de datos [bVisaIngreso] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bVisaIngreso], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [bVisaIngreso] is null \ngroup by [bVisaIngreso]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0139",
         "tabla": "[SimPais]",
         "campos": "[bVisaSalida] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bVisaSalida] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bVisaSalida], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [bVisaSalida] is null \ngroup by [bVisaSalida]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0140",
         "tabla": "[SimPais]",
         "campos": "[bVisaSalida] [bit] NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bVisaSalida] de la tabla [SimPais] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bVisaSalida], count( *) as '# Registros No Válidos'\nfrom (select * from [SimPais] where [bVisaSalida] is not null) v\nwhere [bVisaSalida] NOT IN ('0','1')\ngroup by [bVisaSalida]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0141",
         "tabla": "[SimPais]",
         "campos": "[sCodigoIso] [char](3) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sCodigoIso] de la tabla [SimPais] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 15,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [sCodigoIso], count( *) as '# Registros Nulos o Vacios'\nfrom [SimPais]\nwhere [sCodigoIso] is null or LTRIM([sCodigoIso]) = '' \ngroup by [sCodigoIso]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0143",
         "tabla": "[SimPais]",
         "campos": "[bVisaTurista] [bit] NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bVisaTurista] de la tabla [SimPais] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bVisaTurista], count( *) as '# Registros No Válidos'\nfrom (select * from [SimPais] where [bVisaTurista] is not null) v\nwhere [bVisaTurista] NOT IN ('0','1')\ngroup by [bVisaTurista]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0144",
         "tabla": "[SimPais]",
         "campos": "[bVisaNegocio] [bit] NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bVisaNegocio] de la tabla [SimPais] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bVisaNegocio], count( *) as '# Registros No Válidos'\nfrom (select * from [SimPais] where [bVisaNegocio]is not null) v\nwhere [bVisaNegocio] NOT IN ('0','1')\ngroup by [bVisaNegocio]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0145",
         "tabla": "[SimPais]",
         "campos": "[bVisaEstudiante] [bit] NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [bVisaEstudiante] de la tabla [SimPais] presentan los siguientes valores válidos: '0','1'",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bVisaEstudiante], count( *) as '# Registros No Válidos'\nfrom (select * from [SimPais] where [bVisaEstudiante] is not null) v\nwhere [bVisaEstudiante] NOT IN ('0','1')\ngroup by [bVisaEstudiante]",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0146",
         "tabla": "[SimDocPersona]",
         "campos": "[sNumero] ",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdDocumento] y [sNumero] debe ser único para los registros de la tabla [SimDocPersona] cuyos elementos de datos [sIdDocumento] presenta el valor 'DNI' y el elemento de datos [bActivo] = 1, además el elemento de datos [sIdPaisNacionalidad] presenta el valor 'PER' en la tabla  [SimPersona]",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 277907,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT COUNT(*) as 'Número de DNIs Duplicados'\nFROM( SELECT a.sNumero,a.sIdDocumento,count( *) as 'Número de DNIs Duplicados'\n   from SimDocPersona a  inner join SimPersona b on a.uIdPersona=b.uIdPersona\nwhere a.[sIdDocumento]='DNI' and b.[sIdPaisNacionalidad]='PER' and a.bActivo=1 --and substring(convert(varchar(50),a.dFechaHoraAud,102),1,4)='2024'\ngroup by a.sNumero, a.sIdDocumento having count(*)>1) M",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0147",
         "tabla": "[SimDocPersona]",
         "campos": "[sNumero]",
         "definicionRegla": "Si para un registro de la tabla [SimDocPersona] el elemento de datos [sIdDocumento] presenta el valor 'DNI' y el elemento de datos [bActivo] = 1, además el elemento de datos [sIdPaisNacionalidad] presenta el valor 'PER' en la tabla  [SimPersona]\nEntonces el elemento de datos [sNumero] de la tabla [SimDocPersona] presenta una longitud de 8 dígitos numéricos.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 3431,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros Longitud no válida DNI PERUANOS ACTIVOS'\n   from SimDocPersona a\n   inner join SimPersona b on a.uIdPersona=b.uIdPersona\nwhere a.[sIdDocumento]='DNI' and b.[sIdPaisNacionalidad]='PER' \nand LEN(a.sNumero) <> 8 and a.bActivo=1",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0148",
         "tabla": "[SimDocPersona]",
         "campos": "[sNumero] ",
         "definicionRegla": "Si para un registro de la tabla [SimDocPersona] el elemento de datos [sIdDocumento] presenta el valor 'PAS' y el elemento de datos [bActivo] = 1, además el elemento de datos [dFechaHoraReg] presenta una fecha mayor 01\/08\/2016 en la tabla [SimPasaporte].\nEntonces el elemento de datos [sNumero] de la tabla SimDocPersona presenta una longitud de 9 dígitos numéricos.",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros Longitud no válida PASAPORTE ELECTRÓNICOS PERUANOS ACTIVOS'\n   from SimDocPersona a   inner join [SimPasaporte] p on a.sNumero=p.sPasNumero and a.sIdDocumento='PAS'\nwhere len(LTRIM(a.sNumero)) <> 9\nAND p.dFechaHoraReg > '2016-08-01 00:00:00.000'  and a.bActivo=1",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0149",
         "tabla": "[SimDocPersona]",
         "campos": "[bActivo] ",
         "definicionRegla": "Si para un registro de la tabla [SimPersona] el elemento de datos [sIdPaisNacionalidad] presenta el valor 'PER' \nEntonces en la tabla [SimDocPersona] para cada valor del elemento de datos [sIdDocumento] = ‘DNI’ sólo se tiene un registro de cuyo elemento de datos [bActivo] presenta el valor 1. ",
         "dimensionRegla": "Frescura",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 145083,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT sum(total) as '# de DNIs activos con Inconsistencia' \nfrom(select uIdPersona,[sIdDocumento], count(*) as total \nfrom(SELECT [sIdDocumento],sNumero, a.uIdPersona\n   from SimDocPersona a inner join SimPersona b on a.uIdPersona= b.uIdPersona\nwhere a.bActivo=1 and b.sIdPaisNacionalidad='PER' and a.sIdDocumento='DNI'\ngroup by [sIdDocumento],sNumero, a.uIdPersona) M\ngroup by uIdPersona,[sIdDocumento]\nhaving count (*)>1 ) W",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0150",
         "tabla": "[SimDocPersona]",
         "campos": "[bActivo] ",
         "definicionRegla": "Si para un registro de la tabla [SimPasaporte] el elemento de datos [Fecha de expiración] es menor a la fecha actual \nEntonces en la tabla [SimDocPersona] el registro relacionado con el elemento de datos [sNumero] y el elemento de datos [sIdDocumento] = ‘PAS’  presenta el valor 0 en el elemento de datos [bActivo] ",
         "dimensionRegla": "Frescura",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 4106267,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT COUNT(*) '# de Pasaporte Vencidos activos con Inconsistencia' \n   from SimDocPersona a \ninner join SimPasaporte b on a.sNumero= b.sPasNumero and a.sIdDocumento='PAS'\nwhere a.bActivo=1 AND B.dFechaExpiracion< GETDATE() AND B.sEstadoActual<>'A'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0151",
         "tabla": "[SimMovMigra]",
         "campos": "[sNombres] ",
         "definicionRegla": "Todos los valores del elemento de datos [sNombres] de la tabla [SimMovMigra] deben ser iguales a la concatenación de los elementos de datos [spaterno] , [sMaterno] y [sNombre] de la tabla [SimPersona] cuyo elemento de datos [sIdPaisNacionalidad] es igual a “PER”",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 3331914,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(* ) '# Nombres de Peruanos  Inconsistentes'\nfrom SimMovMigra m\nINNER JOIN\n(select uidpersona, spaterno +' '+ sMaterno + ' '+  sNombre as nombre\n from SimPersona\n where uIdPersona != '00000000-0000-0000-0000-000000000000'\n\tAND sIdPaisNacionalidad = 'PER'\n\tAND sPaterno != '' AND sMaterno != ''\n\tAND sPaterno IS NOT NULL AND sMaterno IS NOT NULL) sp on sp.uIdPersona=m.uIdPersona\n\twhere m.sNombres != sp.nombre",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0152",
         "tabla": "[SimMovMigra]",
         "campos": "[sNumeroDoc] ",
         "definicionRegla": "Si para un registro de la tabla [SimMovMigra] los elementos de datos [sIdPaisNacionalidad]=”PER” y [sIdDocumento] = “PAS” O “DNI”  Entonces elemento de datos [sNumeroDoc] no deben contener letras",
         "dimensionRegla": "Exactitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 21615,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT  COUNT(*)'# Pasaporte y DNI de Peruanos que contienen letras'\nFROM SimMovMigra smm\nWHERE \n\tsmm.bAnulado = 0\n\tAND smm.bTemporal = 0\n\tAND smm.uIdPersona != '00000000-0000-0000-0000-000000000000'\n\tAND smm.sIdPaisNacionalidad = 'PER'\n\tAND smm.sNumeroDoc LIKE '1[1-2]%[a-zA-Z]%'\n\tand smm.sIdDocumento IN('PAS', 'DNI')\n\tAND smm.dFechaControl > '2016-01-01 00:00:00.000'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0153",
         "tabla": "[SimMovMigra]",
         "campos": "[sNombres] ",
         "definicionRegla": "Todos los registros del elemento de datos [sNombres] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío\nCompletitud",
         "dimensionRegla": "Obligatoriedad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 21906,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count(*) '# Nombres Nulo o Vacíos'\nFROM SimMovMigra smm\nJOIN SimPersona sper ON smm.uIdPersona = sper.uIdPersona\nWHERE\n   smm.bAnulado = 0\n   AND smm.bTemporal = 0\n   AND smm.dFechaControl >= '2011-01-01 00:00:00.000'\n   AND (smm.uIdPersona != '00000000-0000-0000-0000-000000000000' AND smm.uIdPersona IS NOT NULL)\n   AND (smm.sNombres IS NULL OR smm.sNombres = '')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0154",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdCalidad] ",
         "definicionRegla": "Si para un registro de la tabla [SimMovMigra] los elementos de datos [sIdPaisNacionalidad]<>” PER” y “NN” \nEntonces el elemento de datos [nIdCalidad] debe tener un valor diferente a 21 (Peruano)",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 6411,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count(*) '# Calidad Migratoria de Extranjeros Inconsistente '\nFROM SimMovMigra smm\nWHERE  smm.bAnulado = 0   AND smm.bTemporal = 0\n   AND smm.uIdPersona != '00000000-0000-0000-0000-000000000000'\n   AND smm.nIdCalidad = 21 -- 21 | PERUANO | N\n   AND (smm.sIdPaisNacionalidad NOT IN ('PER', 'NNN') AND smm.sIdPaisNacionalidad IS NOT NULL)  AND smm.dFechaControl >= '2016-01-01 00:00:00.000'\n   AND (smm.sNumeroDoc != '' AND smm.sNumeroDoc IS NOT NULL)",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0155",
         "tabla": "[SimMovMigra]",
         "campos": "[sTipo] ",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sTipo],  [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio”  y  DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio”  debe ser único para los registros de la tabla [SimMovMigra] ",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 65729,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*)  '# Ingresos\/Salidas de Movimientos Migratorio Inconsistente '\nfrom(\nSELECT mm.*,    COUNT(1) OVER (PARTITION BY mm.sTipo,\tmm.uIdPersona, CAST(mm.dFechaControl AS DATE), -- Fecha\nDATEPART(HH, mm.dFechaControl) – Hora\n) as hora FROM SimMovMigra mm\nWHEREmm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000') mm2 WHERE mm2.hora >= 2 -- [yyyy-MM-dd] y [HH:] iguales",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0156",
         "tabla": "[SimMovMigra]",
         "campos": "[bTemporal] [bit] NOT NULL,",
         "definicionRegla": "Para un registro de la tabla [SimMovMigra] el elemento de datos [bTemporal] es igual a 1 entonces el elemento de datos [ [bAnulado] no puede presentar el valor 1",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 23,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select [bTemporal], count( *) as '# Registros bTemporal inconsistentes'\nfrom (select * from [SimMovMigra] where [bTemporal] is not null) v\nwhere bTemporal=1 and [bAnulado] =1\ngroup by [bTemporal]",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0157",
         "tabla": "[SimMovMigra]",
         "campos": "[dFechaControl] [datetime] NOT NULL,",
         "definicionRegla": "Para todos los registros del elemento de datos [dFechaControl] de la tabla [SimMovMigra] cuyo elemento de datos [dModuloDigital] sea igual a SIM-MCM y SIM-MCP deben estar dentro del rango de fechas de la tabla [SimSesion] para [nIdSesion] correspondiente ",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 5836,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count (*) as '# Registros control migratorio con Sesiones Inconsistentes'\nfrom [SimMovMigra] M\nleft join SimSesion S on m.nIdSesion=s.nIdSesion and M.dFechaControl > s.dFechaInicio \nwhere s.nIdSesion is null  and M.dFechaControl > '2016-01-01 00:00:00.000' \nand m.sIdModuloDigita in ('SIM-MCM','SIM-MCP')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0158",
         "tabla": "[SimMovMigra]",
         "campos": "[nPermanencia] [int] NOT NULL,",
         "definicionRegla": "Si el elemento de datos [sTipo] presenta el valor \"S\" entonces el elemento de datos [nPermanencia] de la tabla [SimMovMigra] presentan un valor igual a 0",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 1760,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count (*) as '# Registros Tipo Salida con Permanecia Inconsistente'\nfrom [SimMovMigra]\nwhere [nPermanencia] <> 0 and [stipo]='S'\nand SimMovMigra.bAnulado = 0 and  SimMovMigra.bTemporal = 0\nand M.dFechaControl > '2016-01-01 00:00:00.000'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0159",
         "tabla": "[SimMovMigra]",
         "campos": "[nPermanencia] [int] NOT NULL,",
         "definicionRegla": "Si el elemento de datos [sTipo] presenta el valor \"E\" y en la relación con la tabla [SimPersona] el elemento de datos [sIdPaisNacionalidad] es igual a “PER”\nEntonces el elemento de datos [nPermanencia] de la tabla [SimMovMigra] presentan un valor igual 0",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 57,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count (*) as '# Registros Entrada Peruanos con Permanecia Inconsistente'\nfrom [SimMovMigra]\nwhere [stipo]='E' AND  sIdPaisNacionalidad = 'PER' AND [nPermanencia] <> 0",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0160",
         "tabla": "[SimMovMigra]",
         "campos": "[sNumeroDoc] [varchar](25) NOT NULL,",
         "definicionRegla": "Si para un registro de la tabla [SimMovMigra] los elementos de datos [sTipo]='S', [sIdPaisNacimiento]=”PER” y [sIdPaisNacimiento]<> [sIdPaisNacionalidad]\nEntonces los elementos de datos [sIdDocumento] y [sNumeroDoc] deben ser los mismos del último registro de la tabla [SimMovMigra] cuyo elementos de datos [sTipo]='I' del elemento de datos[sIdPersona] correspondiente.",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 21201,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT  COUNT(*)'# Control Migratorio Peruanos con Multi Nacionalidad Inconsistente'\nFROM SimMovMigra smm WHERE smm.bAnulado = 0 AND smm.bTemporal = 0 AND smm.sIdPaisNacionalidad = 'PER' AND smm.[sIdPaisNacimiento] <> 'NNN' AND smm. sTipo ='S'\n\tand [sIdPaisNacimiento]<> [sIdPaisNacionalidad] \tAND smm.dFechaControl > '2016-01-01 00:00:00.000'and smm.sIdDocumento<> (select sIdDocumento from SimMovMigra where sIdMovMigratorio = (select max(sIdMovMigratorio)from SimMovMigra where sTipo='E'and uIdPersona=smm.uIdPersona and sIdMovMigratorio<smm.sIdMovMigratorio AND [sIdPaisNacimiento] <> 'NNN' and smm.sIdPaisNacionalidad = 'PER' ))\n\tand smm.sNumeroDoc<> (select sNumeroDoc from SimMovMigra where sIdMovMigratorio = (select max(sIdMovMigratorio)from SimMovMigra where sTipo='E'and uIdPersona=smm.uIdPersona and sIdMovMigratorio<smm.sIdMovMigratorio AND [sIdPaisNacimiento] <> 'NNN' and smm.sIdPaisNacionalidad = 'PER'))",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0161",
         "tabla": "[SimItinerario]",
         "campos": "[dFechaCierre] [datetime] NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [dFechaCierre] de la tabla [SimItinerario] debe ser mayor al elemeneto de datos [dFechaProgramada]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 9606,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*) as '# Registros dFechaCierre Incosistentente'\nfrom [SimItinerario]\nwhere [dFechaCierre] < dFechaProgramada",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0162",
         "tabla": "[SimMovMigra]",
         "campos": "[dRptaRq] [datetime] NULL,",
         "definicionRegla": "En la tabla [SimMovMigra] todos los registros del elemento de datos [dRptaRq] debe ser mayor al elemeneo de datos [dConsRq]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 1,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*) as '# Registros dRptaRq inconsistente'\nfrom [SimMovMigra]\nwhere [dRptaRq]< [dConsRq] and  dFechaControl >= '2018-01-01 00:00:00.000'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0163",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdEstacionDigita] [int] NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [nIdEstacionDigita], [sTipo], [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimMovMigra]",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 12078,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*)  '# Ingresos\/Salidas de Movimientos Migratorio nIdEstacionDigita Inconsistente-  '\nFROM SimMovMigra mm\ninner join  SimMovMigra ss on mm.uIdPersona=ss.uIdPersona\nand mm. sTipo=ss. sTipo and\nCAST(mm.dFechaControl AS DATE)=CAST(ss.dFechaControl AS DATE) and DATEPART(HH, mm.dFechaControl) =DATEPART(HH, ss.dFechaControl) \nand mm. nIdEstacionDigita<>ss. nIdEstacionDigita and mm. bAnulado=ss. bAnulado and mm.sIdModuloDigita=ss.sIdModuloDigita\nWHERE mm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000'\nand mm.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0164",
         "tabla": "[SimItinerario]",
         "campos": "[sIdCiudad] [char](3) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdCiudad], [[sIdPais]] de la tabla [SimItinerario] debe existir en la tabla [SimCiudad]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdCiudad sin Tabla Maestra'\n   FROM (select * from SimItinerario where sIdCiudad is not null) child\n   LEFT JOIN SimCiudad parent ON parent. sIdCiudad = child. sIdCiudad and parent.sIdPais= child.sIdPais   WHERE parent. sIdCiudad IS NULL",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0165",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdModuloDigita] [char](7) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdModuloDigita], [sTipo], [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimMovMigra]",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 432,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*)  '# Ingresos\/Salidas de Movimientos Migratorio sIdModuloDigita Inconsistente-'\nFROM SimMovMigra mm inner join  SimMovMigra ss on mm.uIdPersona=ss.uIdPersona\nand mm. sTipo=ss. sTipo and CAST(mm.dFechaControl AS DATE)=CAST(ss.dFechaControl AS DATE) \nand DATEPART(HH, mm.dFechaControl) =DATEPART(HH, ss.dFechaControl) \nand mm. sIdModuloDigita <>ss. sIdModuloDigita  and mm. bAnulado=ss. bAnulado \nWHERE mm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000'\nand mm.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')\nand ss.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0166",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdPaisMov] [char](3) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdPaisMov], [sTipo], [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimMovMigra] cuyo [sTipo],=’E’",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 2808,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*) as '# Control Migratorio - sIdPaisMov Inconsistente-  '\nFROM SimMovMigra mm\ninner join SimMovMigra ss on mm.uIdPersona=ss.uIdPersona\nand CAST(mm.dFechaControl AS DATE)=CAST(ss.dFechaControl AS DATE) and DATEPART(HH, mm.dFechaControl) =DATEPART(HH, ss.dFechaControl) \nand mm. sIdPaisMov <>ss. sIdPaisMov and mm.stipo=ss.stipo and mm. bAnulado=ss. bAnulado and mm.sIdModuloDigita=ss.sIdModuloDigita\nWHERE mm.stipo='E' and mm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000' and mm.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0167",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdPaisMov] [char](3) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdPaisMov], [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimMovMigra] cuyo elemento [Tipo] es \"S\"",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 1479,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*) as '# Control Migratorio - sIdPaisMov Inconsistente-  '\nFROM SimMovMigra mm\ninner join SimMovMigra ss on mm.uIdPersona=ss.uIdPersona\nand CAST(mm.dFechaControl AS DATE)=CAST(ss.dFechaControl AS DATE) and DATEPART(HH, mm.dFechaControl) =DATEPART(HH, ss.dFechaControl) \nand mm. sIdPaisMov <>ss. sIdPaisMov and mm.stipo=ss.stipo and mm. bAnulado=ss. bAnulado and mm.sIdModuloDigita=ss.sIdModuloDigita\nWHERE mm.stipo='S' and mm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000'\nand mm.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0169",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdPaisNacimiento] [char](3) NULL,",
         "definicionRegla": "Los valores del elemento de datos [sIdPaisNacimiento] y [uIdPersona] de un registro de la tabla [SimMovMigra] también están presentes en los elementos de datos [sIdPaisNacimiento] y [uIdPersona] de la tabla [SimPersona]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 515,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros sIdPaisNacimiento sin Tabla Maestra'\n   FROM (select * from SimMovMigra where sIdPaisNacimiento is not null) child\n   LEFT JOIN SimPais parent ON parent. sIdPais = child. sIdPaisNacimiento\n   WHERE parent. sIdPais IS NULL",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0170",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdViaTransporte] [char](1) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdViaTransporte], [sTipo], [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimMovMigra]",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 12,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*) as '# Control Migratorio - sIdViaTransporte Inconsistente-  '\nFROM SimMovMigra mm\ninner join SimMovMigra ss on mm.uIdPersona=ss.uIdPersona\nand CAST(mm.dFechaControl AS DATE)=CAST(ss.dFechaControl AS DATE) and DATEPART(HH, mm.dFechaControl) =DATEPART(HH, ss.dFechaControl) \nand mm. sIdViaTransporte <>ss. sIdViaTransporte and mm.stipo=ss.stipo  and mm.bAnulado=ss.bAnulado and mm.sIdModuloDigita=ss.sIdModuloDigita\nWHERE mm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000'\nand mm.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0171",
         "tabla": "[SimItinerario]",
         "campos": "[sNumeroNave] [varchar](20) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sTipoMovimiento ], [sNumeroNave], [nIdTransportista], CAST(mm.dFechaProgramadaAS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaProgramada) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimItinerario]",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 50,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*)  '# Itinerarios de Empresa de Transporte Inconsistente '\nfrom(\nSELECT mm.*,    COUNT(1) OVER (PARTITION BY mm. sTipoMovimiento,\tmm. sNumeroNave, mm. nIdTransportista ,CAST(mm. dFechaProgramada AS DATE), \nDATEPART(HH, mm. dFechaProgramada) \n) as hora FROM SimItinerario mm ) mm2 WHERE mm2.hora >= 2 ",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0172",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDepDigita] [char](3) NOT NULL,",
         "definicionRegla": "En la tabla [SimMovMigra] para todos los registros cuyo elemento de datos [sIdModDigita] presentan el valor \"SIM-MCM\" entonces el elemento de datos [sIdDepDigita] presenta el valor “27”",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count( *) as '# Registros sIdDepDigita Inconsistentes'\nfrom [SimMovMigra]\nwhere sIdModuloDigita = 'SIM-MCM'  and [sIdDepDigita] <> 27  ",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC0173",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDepDigita] [char](3) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdDepDigita], [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimMovMigra]",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 109,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*) as '# Control Migratorio - sIdDepDigita Inconsistente-  '\nFROM SimMovMigra mm\ninner join SimMovMigra ss on mm.uIdPersona=ss.uIdPersona\nand CAST(mm.dFechaControl AS DATE)=CAST(ss.dFechaControl AS DATE) and DATEPART(HH, mm.dFechaControl) =DATEPART(HH, ss.dFechaControl) \nand mm. sIdDepDigita <>ss. sIdDepDigita and mm.stipo=ss.stipo  and mm.bAnulado=ss.bAnulado and mm.sIdModuloDigita=ss.sIdModuloDigita\nWHERE mm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000'\nand mm.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0174",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDependencia] [char](3) NOT NULL,",
         "definicionRegla": "En la tabla [SimMovMigra] para todos los registros cuyo elemento de datos [sIdModDigita] presentan el valor \"SIM-MCM\" entonces el elemento de datos [sIdDependencia] presenta el valor “27”",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 4,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count( *) as '# Registros sIdDependencia Inconsistentes'\nfrom [SimMovMigra]\nwhere sIdModuloDigita = 'SIM-MCM'  and [sIdDependencia] <> '27'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0175",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDependencia] [char](3) NOT NULL,",
         "definicionRegla": "\nEl valor de la clave compuesta por los elementos de datos [sIdDependencia], [uIdPersona], CAST(mm.dFechaControl AS DATE) “Fecha de Control Migratorio” y DATEPART(HH, mm.dFechaControl) “Hora de Control Migratorio” debe ser único para los registros de la tabla [SimMovMigra]",
         "dimensionRegla": "Unicidad",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 81,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count(*) as '# Control Migratorio - sIdDependencia Inconsistente-  '\nFROM SimMovMigra mm\ninner join SimMovMigra ss on mm.uIdPersona=ss.uIdPersona\nand CAST(mm.dFechaControl AS DATE)=CAST(ss.dFechaControl AS DATE) and DATEPART(HH, mm.dFechaControl) =DATEPART(HH, ss.dFechaControl) \nand mm. sIdDependencia <>ss. sIdDependencia and mm.stipo=ss.stipo  and mm.bAnulado=ss.bAnulado and mm.sIdModuloDigita=ss.sIdModuloDigita\nWHERE mm.bAnulado = 0 AND mm.bTemporal = 0 AND mm.dFechaControl >= '2016-01-01 00:00:00.000'\nand mm.sIdModuloDigita in ('SIM-MCM','SIM-CMP','SIM-RCM')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0176",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdItinerario] [char](12) NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdItinerario] y [[nIdTransportista]] de la tabla SIMMovMigra debe existir en la tabla tabla [SimItinerario]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 49130,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros Control Migratorio con sIdItinerario y Transportista Inconsistente'\n  FROM  SimMovMigra  child\n   LEFT JOIN SimItinerario parent ON parent. sIdItinerario = child. sIdItinerario\nand parent. nIdTransportista = child. nIdTransportista\nWHERE parent.sIdItinerario  IS NULL and  child.sIdItinerario is not null\nand child.bAnulado = 0 AND child.bTemporal = 0 AND child.dFechaControl >= '2016-01-01 00:00:00.000'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0177",
         "tabla": "[SimMovMigra]",
         "campos": "[nPermanencia] [int] NOT NULL,",
         "definicionRegla": "Para la tabla SimMovMigra, si el elemento de datos [sTipo] = \"E\", [nidcalidad] ='41' and [sIdViaTransporte]='A' y en la relación con la tabla [SimPersona] el elemento de datos [sIdPaisNacionalidad] es diferente a “PER”\nEntonces el elemento de datos [nPermanencia] de la tabla [SimMovMigra] presentan un valor mayor a 0",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 6,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select count (*) as '# Registros Permanecia Extranjeros Turistas Inconsistente'\nfrom [SimMovMigra]\nwhere [nPermanencia] = 0 and [stipo]='E' and sIdPaisNacionalidad<>'PER' and sIdPaisNacimiento<>'PER' and nidcalidad ='41' and sIdViaTransporte='A'\nand bAnulado = 0 AND bTemporal = 0 AND dFechaControl >= '2016-01-01 00:00:00.000'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0178",
         "tabla": "[SimMovMigra]",
         "campos": "[nIdCalidad] [int] NOT NULL,",
         "definicionRegla": "ISi para un registro de la tabla [SimMovMigra] los elementos de datos [sIdPaisNacionalidad]=” PER”\n Entonces el elemento de datos [nIdCalidad] debe tener registrado el valor <>41 (Turista)",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 151056,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count(*) '# Calidad Migratoria de Peruanos Inconsistente '\nFROM SimMovMigra smm\nWHERE  smm.bAnulado = 0   AND smm.bTemporal = 0\n   AND smm.uIdPersona != '00000000-0000-0000-0000-000000000000'\n   AND smm.nIdCalidad = 41 -- 41 | TURISTA | N\n   AND smm.sIdPaisNacionalidad ='PER'  AND smm.dFechaControl >= '2016-01-01 00:00:00.000'\n   AND (smm.sNumeroDoc != '' AND smm.sNumeroDoc IS NOT NULL)",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0179",
         "tabla": "[SimItinerario]",
         "campos": "[sTipoMovimiento] [char](1) NOT NULL,",
         "definicionRegla": "El valor de la clave compuesta por los elementos de datos [sIdItinerario] y [nidTipoMovimiento] de la tabla SIMMovMigra debe existir en la tabla tabla [SimItinerario]",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 8133,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros Control Migratorio con sIdItinerario y Tipo de Movimiento Inconsistente'\n FROM  SimMovMigra  child\n   LEFT JOIN SimItinerario parent ON parent. sIdItinerario = child. sIdItinerario\nand parent.sTipoMovimiento = child.sTipo\nWHERE parent.sIdItinerario  IS NULL and  child.sIdItinerario is not null\nand child.bAnulado = 0 AND child.bTemporal = 0 AND child.dFechaControl >= '2016-01-01 00:00:00.000'\nand child.sIdViaTransporte='A' and sIdModuloDigita='SIM-MCM'",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0180",
         "tabla": "[SimMovMigra]",
         "campos": "[dFechaControl] [datetime] NOT NULL,",
         "definicionRegla": "Para todos los registros del elemento de datos [dFechaControl] de la tabla [SimMovMigra] deben estar dentro del rango de fechas de la tabla [SimTurnoOperador] para [nIdTurnoOperador] correspondiente",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 73844,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros Control Migratorio con dFechaControl  Inconsistente'\nfrom SimMovMigra sm\ninner join [SimTurnoOperador] st on sm.nIdTurnoOperador=st.nIdTurnoOperador\nwhere sm.bAnulado = 0 AND sm.bTemporal = 0 AND sm.dFechaControl >= '2016-01-01 00:00:00.000' and sm.sIdViaTransporte='A' and sm.sIdModuloDigita='SIM-MCM'\nand not sm.dFechaControl between st.dFechaInicio \nand DATEADD(second, DATEDIFF(second,st.dFechaTurnoIni, st.dFechaTurnoFin) + 300, st.dFechaInicio)",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0181",
         "tabla": "[SimMovMigra]",
         "campos": "[sIdDocumento] [char](3) NOT NULL,",
         "definicionRegla": "Si para un registro de la tabla [SimMovMigra] los elementos de datos [sIdPaisNacionalidad] con un valor diferente al conjunto de datos ('PER','BOL','COL','ECU','ARN','BRA','CHL','PAR', 'URU')\nEntonces el elemento de datos [sIdDocumento] no debe tener registrado el valor de \"DNI\" o \"CPI\"",
         "dimensionRegla": "Consistencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 2616,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "SELECT count( *) as '# Registros Control Migratorio con sIdDocumento  Inconsistente'\nFROM  SimMovMigra  child where child.bAnulado = 0 AND child.bTemporal = 0 \nAND child.dFechaControl >= '2016-01-01 00:00:00.000'\nand child. nIdCalidad<>21 and child.sIdPaisNacionalidad not in ('PER','BOL','COL','ECU','ARN','BRA','CHL','PAR','URU')\nand child.sIdDocumento in ('CPI','DNI')",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC0009",
         "tabla": "[SimMovMigra]",
         "campos": "[sTipo] [char] (1) NOT NULL,",
         "definicionRegla": "Todos los registros del elemento de datos [sTipo] de la tabla [SimMovMigra] presentan un valor diferente al nulo o vacío.",
         "dimensionRegla": "Completitud",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 3,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "BEGIN TRY  \nUpdate SimMovMigra\nSet sTipo ='Valor sTipo válido'\nWhere sIdMovMigratorio= 'sIdMovMigratorio correspondiente'\nEND TRY  \nBEGIN CATCH  \n    SELECT   \n        ERROR_NUMBER() AS ErrorNumber  \n       ,ERROR_MESSAGE() AS ErrorMessage;  \nEND CATCH  ",
         "statusRegla": "OBSERVADO"
      }
   ],
   "Trámites Inmigración": [
      {
         "idRegla": "RC-GI-001",
         "tabla": "SimTramite",
         "campos": "sNumeroTramite",
         "dimensionRegla": "Unicidad",
         "definicionRegla": "Valores no deben repetirse",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select sNumeroTramite from SimTramite group by sNumeroTramite\nHaving count(*)>1",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-002",
         "tabla": "SimTramite",
         "campos": "sNumeroTramite",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select sNumeroTramite from SimTramite where sNumeroTramite is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-003",
         "tabla": "SimTramite",
         "campos": "bCulminado",
         "dimensionRegla": "Frescura",
         "definicionRegla": "Valores deben ser 0 o 1",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select bCulminado from SimTramite where bCulminado not in (0,1)",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-004",
         "tabla": "SimTramite",
         "campos": "bCulminado",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select bCulminado from SimTramite where bCulminado is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-005",
         "tabla": "SimTramite",
         "campos": "bCancelado",
         "dimensionRegla": "Frescura",
         "definicionRegla": "Valores deben ser 0 o 1",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select bCancelado from SimTramite where bCancelado not in (0,1)",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-006",
         "tabla": "SimTramite",
         "campos": "bCancelado",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select bCancelado from SimTramite where bCancelado is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-007",
         "tabla": "SimTramite",
         "campos": "nIdTipoTramite",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select nIdTipoTramite from SimTramite where nIdTipoTramite is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-008",
         "tabla": "SimTramite",
         "campos": "dFechaHora",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select dFechaHora from SimTramite where dFechaHora is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-009",
         "tabla": "SimTramite",
         "campos": "nIdMotivoTramite",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select nIdMotivoTramite from SimTramite where nIdMotivoTramite is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-010",
         "tabla": "SimTramite",
         "campos": "dFechaHoraReg\n",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select dFechaHoraReg from SimTramite where dFechaHoraReg is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-011",
         "tabla": "SimTramite",
         "campos": "dFechaHoraAud",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select dFechaHoraAud from SimTramite where dFechaHoraAud is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-012",
         "tabla": "SimTramite",
         "campos": "uIdPersona",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select uIdPersona from SimTramite where uIdPersona is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-013",
         "tabla": "SimTramite",
         "campos": "bGratuito",
         "dimensionRegla": "Frescura",
         "definicionRegla": "Valores deben ser 0 o 1",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select bGratuito from SimTramite where bGratuito not in (0,1)",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-014",
         "tabla": "SimTramite",
         "campos": "Bgratuito",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Valores no deben ser nulos",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "Select bGratuito from SimTramite where bGratuito is null",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-015",
         "tabla": "SimTramite",
         "campos": "bAutomatico\n",
         "dimensionRegla": "Frescura",
         "definicionRegla": "Valores deben ser 0 o 1",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "select bAutomatico from SimTramite where bAutomatico not in (0,1)",
         "statusRegla": "APROBADO"
      },
      {
         "idRegla": "RC-GI-190",
         "tabla": "Varias",
         "campos": "Varios",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "El representante de TramiteINM debe estar en SimPersona",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 196965,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-191",
         "tabla": "Varias",
         "campos": "Varios",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Los CCM por trabajo deben registrar una Empresa",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 67385,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-192",
         "tabla": "Varias",
         "campos": "Varios",
         "dimensionRegla": "Completitud",
         "definicionRegla": "La calidad migratoria solicitada debe ser distinta a la anterior",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 297700,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-193",
         "tabla": "Varias",
         "campos": "Varios",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Los tramites de CCM con estado aprobado deben tener fecha de aprobacion",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 20397,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-194",
         "tabla": "Varias",
         "campos": "Varios",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Los prefijo de tramites deben corresponder a la dependencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 289198,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-195",
         "tabla": "Varias",
         "campos": "Varios",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Las etapas que derivan a un estado de aprobacion de los Trámites de PRR, CCM, CPP y PTP deben corresponder a la etapa que permita la aprobacion",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 47336,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-196",
         "tabla": "Varias",
         "campos": "Varios",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Los tramites con estado aprobado no deben estar en etapa de Asociacion Beneficiario",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 11368,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-197",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Los tramites con estado aprobado no deben estar en etapa de Iniciado",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 402,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-198",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "La etapa registrada en SimTramiteINM debe coincidir con la ultima etapa registrada en SimEtapaTramiteINM",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 5756,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-199",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Completitud",
         "definicionRegla": "Debe existir una persona para iniciar un tramite y registrado en SimTramite",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 3817,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-200",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Los\ttramites con\tentrega\tde\tcarné\tfinalizado\ty\tsin reconsideracion no deben estar en estado pendiente",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 26,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-201",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los Carné de extranjeria cuentan con residencia vigente",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 2,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-202",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla de calidad de datos que para la expedicion de Carné de extranjeria se debe contar con visa vigente",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 21,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-203",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que la fecha de Inicio de Vigencia del visado debe ser posterior a la fecha de aprobacion del mismo",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 5,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-204",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que la fecha de Inicio de Vigencia del visado debe ser menor a la fecha de Fin de vigencia",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 20727,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-205",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Tramites de SOLICITUD DE CALIDAD MIGRATORIA, PRORROGA DE RESIDENCIA,  CAMBIO  DE   CALIDAD   MIGRATORIA,\nINSCR.REG.CENTRAL EXTRANJERÍA, Permiso Temporal de Permanencia - Venezolanos, ACTUALIZACIÓN CON EMISIÓN DE",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 1483,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-206\n",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que el Cambio de Calidad Migratoria Rentista Residente tiene un tiempo de permanencia Indefinido",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-207",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que la Solicitud de Calidad Migratoria Rentista Residente no debe contar con renovacion de calidad migratoria",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-208",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que Para los tramites de Regularizacion Migratoria se debe emitir el CPP",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-209",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los CPP emitidos deben tener una vigencia de 2 años",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 3,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-210",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que la caducidad de los Carnet de Extranjeria para la Calidad Migratoria de permanente deben de ser como maximo de 5 años.",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 2,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-211",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Unicidad",
         "definicionRegla": "Se define como regla que los los tipos de Motivos de tramites deben estar contenidos en la tabla simTipoMotivo manteniendo la integridad referencial",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-212",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Unicidad",
         "definicionRegla": "Se define como regla que los tipos de tramites registrados en simTramite deben guardad integridad referencial con la tabla simTipoTramite",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-213",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que la fecha de emision del carnet de Extranjeria debe ser menor a la fecha de Caducidad del mismo",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 1064,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-214",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que la emision de carnet de extranjeria es para cada persona individualmente",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-215",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los carnet de extranjeria entregados deben haber concluido con la etapa de impresión",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-216",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los tramites de inmigracion cancelados deben tener motivo de cancelacion",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 98,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-217",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los Tramites de inmigracion deben contar con motivo de tramite",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 130,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-218\n",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los registro de Etapas de Tramites del proceso de inmigracion deben cuentar con Tramites creados en tabla SimTramiteInm",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-219\n",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los tramites culminados y sin cancelacion deben registrar etapas",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 145121,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-220",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los Tramites del proceso de Inmigracion deben tener un Tipo de Tramite definido",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-221",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que los tramites de CCM hacia calidad Especial deben derivar de un CPP o PTP",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 6463,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-222",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que para solicitar CM Mercosur Permanente se debe contar con la CM Temporal",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-223",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que las calidades migratorias solicitadas como APE debe ser de 1 o 2 años",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 5,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      },
      {
         "idRegla": "RC-GI-224",
         "tabla": "Varias\n",
         "campos": "Varias\n",
         "dimensionRegla": "Consistencia",
         "definicionRegla": "Se define como regla que la calidad migratoria de Rentista debe ser siempre permanente",
         "totalRegCorrectos": 0,
         "totalRegIncorrectos": 0,
         "scriptSQLValidacion": "-",
         "scriptSQLHallazgo": "-",
         "statusRegla": "OBSERVADO"
      }
   ]
}